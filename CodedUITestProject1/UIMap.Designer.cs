// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 16.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject1
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedLogin - Use 'RecordedLoginParams' to pass parameters into this method.
        /// </summary>
        public void RecordedLogin()
        {
            #region Variable Declarations
            WinEdit uINameEdit = this.UIDebugWindow.UIItemWindow.UIWindowsFormsApp1exeListItem.UINameEdit;
            HtmlEdit uIUsernameEdit = this.UIForm1Window.UIItemClient.UIAboutblankDocument.UIUsernameEdit;
            HtmlEdit uIPasswordEdit = this.UIForm1Window.UIItemClient.UIAboutblankDocument.UIPasswordEdit;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            #endregion

            // Wait for 1 seconds for user delay between actions; Click 'Name' text box
            Playback.Wait(1000);
            Mouse.Click(uINameEdit, new Point(165, 19));

            // Type 'zyg' in 'username' text box
            uIUsernameEdit.Text = this.RecordedLoginParams.UIUsernameEditText;

            // Type '{Tab}' in 'username' text box
            Keyboard.SendKeys(uIUsernameEdit, this.RecordedLoginParams.UIUsernameEditSendKeys, ModifierKeys.None);

            // Type '********' in 'password' text box
            uIPasswordEdit.Password = this.RecordedLoginParams.UIPasswordEditPassword;

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(88, 24));
        }
        
        /// <summary>
        /// RecordedHello - Use 'RecordedHelloParams' to pass parameters into this method.
        /// </summary>
        public void RecordedHello()
        {
            #region Variable Declarations
            WinEdit uINameEdit = this.UIDebugWindow.UIItemWindow.UIWindowsFormsApp1exeListItem.UINameEdit;
            WinWindow uITextBox1Window = this.UIForm1Window.UIForm1Client.UITextBox1Window;
            WinEdit uITextBox1Edit = this.UIForm1Window.UITextBox1Window.UITextBox1Edit;
            WinWindow uIButton1Window = this.UIForm1Window.UIForm1Client.UIButton1Window;
            #endregion

            // Click 'Name' text box
            Mouse.Click(uINameEdit, new Point(251, 4));

            // Click 'textBox1' window
            Mouse.Click(uITextBox1Window, new Point(138, 100));

            // Type 'zyg' in 'textBox1' text box
            uITextBox1Edit.Text = this.RecordedHelloParams.UITextBox1EditText;

            // Click 'button1' window
            Mouse.Click(uIButton1Window, new Point(282, 133));
        }
        
        #region Properties
        public virtual RecordedLoginParams RecordedLoginParams
        {
            get
            {
                if ((this.mRecordedLoginParams == null))
                {
                    this.mRecordedLoginParams = new RecordedLoginParams();
                }
                return this.mRecordedLoginParams;
            }
        }
        
        public virtual RecordedHelloParams RecordedHelloParams
        {
            get
            {
                if ((this.mRecordedHelloParams == null))
                {
                    this.mRecordedHelloParams = new RecordedHelloParams();
                }
                return this.mRecordedHelloParams;
            }
        }
        
        public UIDebugWindow UIDebugWindow
        {
            get
            {
                if ((this.mUIDebugWindow == null))
                {
                    this.mUIDebugWindow = new UIDebugWindow();
                }
                return this.mUIDebugWindow;
            }
        }
        
        public UIForm1Window UIForm1Window
        {
            get
            {
                if ((this.mUIForm1Window == null))
                {
                    this.mUIForm1Window = new UIForm1Window();
                }
                return this.mUIForm1Window;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow();
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private RecordedLoginParams mRecordedLoginParams;
        
        private RecordedHelloParams mRecordedHelloParams;
        
        private UIDebugWindow mUIDebugWindow;
        
        private UIForm1Window mUIForm1Window;
        
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedLogin'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class RecordedLoginParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'zyg' in 'username' text box
        /// </summary>
        public string UIUsernameEditText = "zyg";
        
        /// <summary>
        /// Type '{Tab}' in 'username' text box
        /// </summary>
        public string UIUsernameEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'password' text box
        /// </summary>
        public string UIPasswordEditPassword = "mOL/lXDUSd/hy7K5BZnJEA==";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedHello'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class RecordedHelloParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'zyg' in 'textBox1' text box
        /// </summary>
        public string UITextBox1EditText = "zyg";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIDebugWindow : WinWindow
    {
        
        public UIDebugWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Debug";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Items View";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIWindowsFormsApp1exeListItem UIWindowsFormsApp1exeListItem
        {
            get
            {
                if ((this.mUIWindowsFormsApp1exeListItem == null))
                {
                    this.mUIWindowsFormsApp1exeListItem = new UIWindowsFormsApp1exeListItem(this);
                }
                return this.mUIWindowsFormsApp1exeListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIWindowsFormsApp1exeListItem mUIWindowsFormsApp1exeListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIWindowsFormsApp1exeListItem : WinListItem
    {
        
        public UIWindowsFormsApp1exeListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "WindowsFormsApp1.exe";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("Debug");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIForm1Window : WinWindow
    {
        
        public UIForm1Window()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Form1";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public UIItemWindow1 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow1(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new UIItemClient(this);
                }
                return this.mUIItemClient;
            }
        }
        
        public UIForm1Client UIForm1Client
        {
            get
            {
                if ((this.mUIForm1Client == null))
                {
                    this.mUIForm1Client = new UIForm1Client(this);
                }
                return this.mUIForm1Client;
            }
        }
        
        public UITextBox1Window UITextBox1Window
        {
            get
            {
                if ((this.mUITextBox1Window == null))
                {
                    this.mUITextBox1Window = new UITextBox1Window(this);
                }
                return this.mUITextBox1Window;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow1 mUIItemWindow;
        
        private UIItemClient mUIItemClient;
        
        private UIForm1Client mUIForm1Client;
        
        private UITextBox1Window mUITextBox1Window;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "6";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public UIToolStripContainer1Client UIToolStripContainer1Client
        {
            get
            {
                if ((this.mUIToolStripContainer1Client == null))
                {
                    this.mUIToolStripContainer1Client = new UIToolStripContainer1Client(this);
                }
                return this.mUIToolStripContainer1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIToolStripContainer1Client mUIToolStripContainer1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIToolStripContainer1Client : WinClient
    {
        
        public UIToolStripContainer1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinWindow UIMenuStrip1Window
        {
            get
            {
                if ((this.mUIMenuStrip1Window == null))
                {
                    this.mUIMenuStrip1Window = new WinWindow(this);
                    #region Search Criteria
                    this.mUIMenuStrip1Window.SearchProperties[WinWindow.PropertyNames.Name] = "menuStrip1";
                    this.mUIMenuStrip1Window.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
                    this.mUIMenuStrip1Window.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIMenuStrip1Window;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUIMenuStrip1Window;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIItemClient : WinClient
    {
        
        public UIItemClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.ClassName] = "Internet Explorer_Server";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public UIAboutblankDocument UIAboutblankDocument
        {
            get
            {
                if ((this.mUIAboutblankDocument == null))
                {
                    this.mUIAboutblankDocument = new UIAboutblankDocument(this);
                }
                return this.mUIAboutblankDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIAboutblankDocument mUIAboutblankDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIAboutblankDocument : HtmlDocument
    {
        
        public UIAboutblankDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "blank";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "about:blank";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIUsernameEdit
        {
            get
            {
                if ((this.mUIUsernameEdit == null))
                {
                    this.mUIUsernameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIUsernameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "username";
                    this.mUIUsernameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUIUsernameEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIUsernameEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=username";
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIUsernameEdit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIUsernameEdit;
            }
        }
        
        public HtmlEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "password";
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=password type=password value=\"\"";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIPasswordEdit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIUsernameEdit;
        
        private HtmlEdit mUIPasswordEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIForm1Client : WinClient
    {
        
        public UIForm1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Form1";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinWindow UITextBox1Window
        {
            get
            {
                if ((this.mUITextBox1Window == null))
                {
                    this.mUITextBox1Window = new WinWindow(this);
                    #region Search Criteria
                    this.mUITextBox1Window.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
                    this.mUITextBox1Window.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITextBox1Window;
            }
        }
        
        public WinWindow UIButton1Window
        {
            get
            {
                if ((this.mUIButton1Window == null))
                {
                    this.mUIButton1Window = new WinWindow(this);
                    #region Search Criteria
                    this.mUIButton1Window.SearchProperties[WinWindow.PropertyNames.Name] = "button1";
                    this.mUIButton1Window.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.BUTTON", PropertyExpressionOperator.Contains));
                    this.mUIButton1Window.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIButton1Window;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUITextBox1Window;
        
        private WinWindow mUIButton1Window;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UITextBox1Window : WinWindow
    {
        
        public UITextBox1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox1";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox1Edit
        {
            get
            {
                if ((this.mUITextBox1Edit == null))
                {
                    this.mUITextBox1Edit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITextBox1Edit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITextBox1Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox1Edit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.28315.86")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "OK";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Button";
            this.WindowTitles.Add("OK");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("OK");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
}
